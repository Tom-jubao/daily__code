////习题一：
//#include<stdio.h>
//int main()
//{
//	unsigned long PulArray[] = { 6,7,8,9,10 };
//	unsigned long*PulPtr;
//	
//	PulPtr = PulArray;//PulArray -- 数组名此时为数组首元素地址
//	*(PulPtr + 3) += 3;
//	//PulPtr+3 -- 指向9所在的地址（空间）
//	//*(PulPtr+3) -- 找到9的空间
//	//*(PulPtr + 3) += 3 -- 对 9 进行 +3 的操作，结果为 12
//	
//	printf("%d,%d", *PulPtr, *(PulPtr + 3));//6，12
//	
//	return 0;
//}——1

////习题二：
////写一个函数，可以逆序字符串
//
//#include<stdio.h>
//#include<string.h>
//#include<assert.h>
//void reverse(char* str)
//{
//	assert(str);//断言
//	int len = strlen(str);
//	char*left = str;
//	char*right = str + len - 1;
//	while (left < right)
//	{
//		char tmp = *left;
//		*left = *right;
//		*right = tmp;
//		left++;
//		right--;
//	}
//}
//
//int main()
//{
//	char arr[100] = { 0 };
//	//scanf_s("%s", arr);//若遇到空格，则停止打印，有一定的局限性
//	gets(arr);
//	reverse(arr);
//	printf("%s\n", arr);
//	return 0;
//}——2

////习题三：
////计算求和，求Sn=a+aa+aaa...(没有栈溢出)
//
//#include<stdio.h>
//int main()
//{
//	int a = 0, n = 0;
//	scanf_s("%d%d", &a, &n);
//	int i = 0;
//	int sum = 0;
//	int ret = 0;
//	for (i = 0; i < n; i++)
//	{
//		ret = ret * 10 + a;
//		sum += ret;
//	}
//	printf("Sn = %d\n", sum);
//	return 0;
//}——3

////习题四：
////输出0-100000内的所有自幂数(一个n位数，各位数字n次方之和等于该数本身；且水仙花数为三位自幂数)
//
//#include<stdio.h>
//#include<math.h>
//int main()
//{
//	int i = 0;
//	for (i = 0; i <= 100000; i++)
//	{
//		//判断i是否为自幂数
//		
//		//1.计算i的位数 - n位数
//		int n = 1;
//		int tmp = i;//防止死循环
//		while (tmp /= 10)
//		{
//			n++;
//		}
//
//		//2.计算i的每一位的n次方之和 - sum
//		tmp = i;
//		int sum = 0;
//		while (tmp)
//		{
//			sum += pow(tmp % 10, n);
//			tmp /= 10;
//		}
//
//		//3.比较i与sum
//		if (i == sum)
//		{
//			printf("%d ", sum);
//		}
//	}
//	return 0;
//}——4
