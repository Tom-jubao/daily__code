//#include<stdio.h>                         //一维数组指针（以此证明一维数组在内存中连续存放，差int【4个字节】）
//int main()
//{
//	int arr[] = { 1,2,3,4,5,6,7,8,9 };
//	int i = 0;
//	int sz = sizeof(arr) / sizeof(arr[0]);  //数组元素个数
//	for (i = 0; i < sz; i++)
//	{
//		printf("&a[%d]=%p\n", i, &arr[i]);  //指针输出
//	}
//	return 0;
//}——1

//#include<stdio.h>                        //二维数组指针（以此证明二维数组在内存中连续存放，差int【4个字节】）
//int main()
//{
//	int arr[3][4] = { {1,2,3},{8,6} };
//	int i = 0;;                            //行（假想状态）
//	int j = 0;                             //列（假想状态）
//	for (i = 0; i < 3; i++)
//	{
//		for (j = 0; j < 4; j++)
//		{
//			printf("&a[%d][%d]=%p\n", i, j, &arr[i][j]);//指针输出
//		}
//	}
//	return 0;
//}——2

//#include<stdio.h>                       //冒泡法排序
//void bubble_sort(int arr[], int sz)     //定义函数升序排列
//{
//	int i, j;
//	for (i = 0; i < sz-1; i++)            //共有sz-1趟
//	{
//		int flag==1;                      //假设本趟元素已有序
//      for (j = 0; j < sz - 1 - i; j++)  //每一趟元素比较
//		{
//			if (arr[j] > arr[j + 1])
//			{
//				int temp = arr[j];
//				arr[j] = arr[j + 1];
//				arr[j + 1] = temp;
//              flag=0;                    //本趟排序不完全有序
//			}
//		}
//      if(flag==1)
//     {
//         break;
//     }
//	}
//}
//int main()
//{
//	int arr[] = { 9,8,7,6,5,4,3,2,1,0 };
//	int i = 0;
//	int sz = sizeof(arr) / sizeof(arr[0]); //确定数组内元素个数；arr为数组，我们对arr传参，实际上传递的是arr首元素地址（arr[0]）
//	bubble_sort(arr, sz);                  //调用函数
//	for (i = 0; i < sz; i++)
//	{
//		printf("%d ", arr[i]);
//	}
//	return 0;
//}——1

//#include<stdio.h>                //数组指针
//int main()
//{
//	int arr[] = { 1,2,3,4,5,6,7 };
//	printf("%p\n", arr);           //arr表示首元素地址
//	printf("%p\n", arr + 1);
//
//	printf("%p\n", &arr[0]);       //arr[0]表示首元素地址
//	printf("%p\n", &arr[0] + 1);
//
//	printf("%p\n", &arr);          //&arr表示数组地址
//	printf("%p\n", &arr + 1);
//
//	return 0;
//}——2
